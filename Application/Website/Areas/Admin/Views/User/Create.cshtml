@model EntityLayer.tblUserMaster
@using DataLayer;
@using UtilityLayer;

@{
    ViewBag.Title = "User Management";
    ViewBag.MainTitle = "Home";
}

<div class="widget-box">
    <div class="widget-header widget-header-flat">
        <h4 class="widget-title">Create</h4>
    </div>
    <div class="widget-body">
        <div class="widget-main">
            <div class="form-horizontal">
                @using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.ValidationSummary(true)
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, new { @class = "col-xs-12 col-sm-3 control-label no-padding-right" })
                        <div class="col-xs-12 col-sm-4">
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "width-100" })
                        </div>
                        <div class="help-block col-sm-reset">
                            @Html.ValidationMessageFor(model => model.FirstName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, new { @class = "col-xs-12 col-sm-3 control-label no-padding-right" })
                        <div class="col-xs-12 col-sm-4">
                            @Html.TextBoxFor(model => model.LastName, new { @class = "width-100" })
                        </div>
                        <div class="help-block col-sm-reset">
                            @Html.ValidationMessageFor(model => model.LastName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailId, new { @class = "col-xs-12 col-sm-3 control-label no-padding-right" })
                        <div class="col-xs-12 col-sm-4">
                            @Html.TextBoxFor(model => model.EmailId, new { @class = "width-100" })
                        </div>
                        <div class="help-block col-sm-reset">
                            @Html.ValidationMessageFor(model => model.EmailId)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MobileNo, new { @class = "col-xs-12 col-sm-3 control-label no-padding-right" })
                        <div class="col-xs-12 col-sm-4">
                            @Html.TextBoxFor(model => model.MobileNo, new { @class = "width-100" })
                        </div>
                        <div class="help-block col-sm-reset">
                            @Html.ValidationMessageFor(model => model.MobileNo)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, new { @class = "col-xs-12 col-sm-3 control-label no-padding-right" })
                        <div class="col-xs-12 col-sm-4">
                            @Html.PasswordFor(model => model.Password, new { @class = "width-100" })
                        </div>
                        <div class="help-block col-sm-reset">
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, new { @class = "col-xs-12 col-sm-3 control-label no-padding-right" })
                        <div class="col-sm-2">
                            @Html.DropDownListFor(model => model.Status, FormUtility.GetDBStatusDropdown(), new { @class = "form-control width-100" })
                        </div>
                        <div class="help-block col-sm-reset">
                            @Html.ValidationMessageFor(model => model.Status)
                        </div>
                    </div>
                    <div class="clearfix form-actions">
                        <div class="col-md-offset-3 col-md-9">
                            @Html.HiddenFor(model => model.Id)
                            @Html.Hidden(StringUtility.Current_Page, ViewData[StringUtility.Current_Page])
                            <button type="submit" class="btn btn-info">
                                <i class="ace-icon fa fa-check bigger-110"></i>
                                Submit
                            </button>
                            &nbsp; &nbsp; &nbsp;
                            @Html.ActionLink("Cancel", "Cancel", new { current_page = ViewData[StringUtility.Current_Page] }, new { @class = "btn btn-default btn-line" })
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
